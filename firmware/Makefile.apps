#a Copyright (C) 2015,  Gavin J Stark.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# @file        firmware/Makefile.apps
# @brief       Makefile for the individual apps
#

# Need this for local_csr_write and _exit. Can we lose this?
NFCC_BASE_CLIBS = /opt/netronome/components/standardlibrary/microc/src/rtl.c

# Need this to fix codeless ME assembles for initialization
NFAS_CODELESS_FIXUP = sed -ie 's/\(\(\.%init_csr "default assembler setting"\)\|\(\.%third_party_addressing\)\|\(\.%indirect_ref_mode\)\).*//'

#a Packet capture firmware
$(eval $(call micro_c.add_src_lib,pcap_rx,app,pcap_lib))
$(eval $(call micro_c.add_fw_libs,pcap_rx,nfp sync))
$(eval $(call micro_c.add_define,pcap_rx,PCAP_RX_ISLAND))
$(eval $(call micro_c.compile,pcap_rx,app,pcap_rx.c))

$(eval $(call micro_c.add_src_lib,pcap_host,app,pcap_lib))
$(eval $(call micro_c.add_fw_libs,pcap_host,nfp sync))
$(eval $(call micro_c.compile,pcap_host,app,pcap_host.c))

$(eval $(call micro_c.add_src_lib,pcap_recycle,app,pcap_lib))
$(eval $(call micro_c.add_fw_libs,pcap_recycle,nfp sync))
$(eval $(call micro_c.add_define,pcap_recycle,PCAP_HOST_ISLAND))
$(eval $(call micro_c.compile,pcap_recycle,app,pcap_recycle.c))

$(eval $(call microcode.assemble_init,pcap_init,app,pcap_init.uc))

$(eval $(call nffw.add_obj_with_mes,pcap,pcap_host,i4.me2))
$(eval $(call nffw.add_obj_with_mes,pcap,pcap_recycle,i4.me3))
$(eval $(call nffw.add_obj_with_mes,pcap,pcap_rx,i32.me0 i33.me0 i34.me0))
$(eval $(call nffw.add_init_obj,pcap,pcap_init))
$(eval $(call nffw.link,pcap))

#a Packet generator firmware
$(eval $(call micro_c.add_src_lib,pktgen_host,app,pktgen_lib))
$(eval $(call micro_c.add_fw_libs,pktgen_host,nfp sync))
$(eval $(call micro_c.compile,pktgen_host,app,pktgen_host.c))

$(eval $(call micro_c.add_src_lib,pktgen_tx_slave,app,pktgen_lib))
$(eval $(call micro_c.add_fw_libs,pktgen_tx_slave,nfp sync))
$(eval $(call micro_c.compile,pktgen_tx_slave,app,pktgen_tx_slave.c))

$(eval $(call micro_c.add_fw_libs,pktgen_init,nfp sync))
$(eval $(call micro_c.compile,pktgen_init,app,pktgen_init.c))

$(eval $(call nffw.add_obj_with_mes,pktgen,pktgen_host,i4.me2))
$(eval $(call nffw.add_obj_with_mes,pktgen,pktgen_tx_slave,i32.me0 i32.me1 i32.me2 i32.me3 i32.me4 i32.me5 i32.me6 i32.me7 i33.me0 i33.me1 i33.me2 i33.me3 i33.me4 i33.me5 i33.me6 i33.me7))
$(eval $(call nffw.add_obj_with_mes,pktgen,pktgen_init,i5.me2))
$(eval $(call nffw.add_rtsyms,pktgen))
$(eval $(call nffw.link,pktgen))

